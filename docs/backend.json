{
  "entities": {
    "Customer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Customer",
      "type": "object",
      "description": "Represents a customer with outstanding invoices.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the customer."
        },
        "customerCode": {
          "type": "string",
          "description": "The unique code assigned to the customer."
        },
        "customerName": {
          "type": "string",
          "description": "The name of the customer."
        },
        "region": {
          "type": "string",
          "description": "The geographical region the customer belongs to."
        },
        "invoiceIds": {
          "type": "array",
          "description": "References to Invoices. (Relationship: Customer 1:N Invoice)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "customerCode",
        "customerName",
        "region"
      ]
    },
    "Invoice": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Invoice",
      "type": "object",
      "description": "Represents an invoice for a customer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the invoice."
        },
        "customerId": {
          "type": "string",
          "description": "Reference to Customer. (Relationship: Customer 1:N Invoice)"
        },
        "invoiceNumber": {
          "type": "string",
          "description": "The unique number of the invoice."
        },
        "invoiceAmount": {
          "type": "number",
          "description": "The total amount of the invoice."
        },
        "invoiceDate": {
          "type": "string",
          "description": "The date the invoice was issued.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The status of the invoice (e.g., paid, unpaid, dispute)."
        },
        "outstandingIds": {
          "type": "array",
          "description": "References to Outstandings. (Relationship: Invoice 1:N Outstanding)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "customerId",
        "invoiceNumber",
        "invoiceAmount",
        "invoiceDate",
        "status"
      ]
    },
    "Outstanding": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Outstanding",
      "type": "object",
      "description": "Represents the outstanding amount for an invoice in a specific month.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the outstanding entry."
        },
        "invoiceId": {
          "type": "string",
          "description": "Reference to Invoice. (Relationship: Invoice 1:N Outstanding)"
        },
        "month": {
          "type": "string",
          "description": "The month for which the outstanding amount is recorded (e.g., Apr-25)."
        },
        "amount": {
          "type": "number",
          "description": "The outstanding amount for the specified month."
        }
      },
      "required": [
        "id",
        "invoiceId",
        "month",
        "amount"
      ]
    },
    "AgePeriod": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AgePeriod",
      "type": "object",
      "description": "Represents the age of an outstanding invoice.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the age period."
        },
        "customerId": {
          "type": "string",
          "description": "Reference to Customer. (Relationship: Customer 1:N AgePeriod)"
        },
        "period": {
          "type": "string",
          "description": "The age period (e.g., 0-30days, 30-90days)."
        }
      },
      "required": [
        "id",
        "customerId",
        "period"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/customers/{customerId}",
        "definition": {
          "entityName": "Customer",
          "schema": {
            "$ref": "#/backend/entities/Customer"
          },
          "description": "Stores customer information.",
          "params": [
            {
              "name": "customerId",
              "description": "The unique ID of the customer."
            }
          ]
        }
      },
      {
        "path": "/customers/{customerId}/invoices/{invoiceId}",
        "definition": {
          "entityName": "Invoice",
          "schema": {
            "$ref": "#/backend/entities/Invoice"
          },
          "description": "Stores invoice information for a specific customer.",
          "params": [
            {
              "name": "customerId",
              "description": "The unique ID of the customer."
            },
            {
              "name": "invoiceId",
              "description": "The unique ID of the invoice."
            }
          ]
        }
      },
      {
        "path": "/customers/{customerId}/invoices/{invoiceId}/outstandings/{outstandingId}",
        "definition": {
          "entityName": "Outstanding",
          "schema": {
            "$ref": "#/backend/entities/Outstanding"
          },
          "description": "Stores outstanding amounts for a specific invoice, broken down by month.",
          "params": [
            {
              "name": "customerId",
              "description": "The unique ID of the customer."
            },
            {
              "name": "invoiceId",
              "description": "The unique ID of the invoice."
            },
            {
              "name": "outstandingId",
              "description": "The unique ID of the outstanding amount entry."
            }
          ]
        }
      },
      {
        "path": "/customers/{customerId}/agePeriods/{agePeriodId}",
        "definition": {
          "entityName": "AgePeriod",
          "schema": {
            "$ref": "#/backend/entities/AgePeriod"
          },
          "description": "Stores age period data for a specific customer.",
          "params": [
            {
              "name": "customerId",
              "description": "The unique ID of the customer."
            },
            {
              "name": "agePeriodId",
              "description": "The unique ID of the age period."
            }
          ]
        }
      }
    ],
    "reasoning": "This Firestore structure is designed to track customer invoices and outstanding amounts, while ensuring security and scalability. It's optimized for querying and reporting. The structure uses path-based ownership for customers and denormalizes data to avoid complex security rules.\n\nEach `customer` document contains general information about a customer. Each customer has a collection of `invoices`, which contain a record of the invoices related to a particular customer. Each invoice then contains a collection of `outstandings`, which represent the outstanding amounts for that particular invoice, split by month.\n\n**Authorization Independence and QAPs**:\n\n*   **Authorization Independence:** Authorization is achieved through path-based rules, which do not need a `get()` call. The application enforces security by associating customers with invoices and outstandings through the path structure.\n*   **QAPs (Rules are not Filters):** Secure list operations are enabled through structural segregation. The invoices are stored in subcollections of users and customers, ensuring that listing invoices or outstandings always happens within the authorization context established by the path."
  }
}